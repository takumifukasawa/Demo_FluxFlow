export const litScreenSpaceRaymarchFragmentTemplate = `#version 300 es
precision highp float;
#pragma DEFINES
layout(std140) uniform ubCommon{float uTime;float uDeltaTime;vec4 uViewport;};layout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};layout(std140) uniform ubTimeline{float uTimelineTime;float uTimelineDeltaTime;};
#pragma BLOCK_BEFORE_RAYMARCH_CONTENT
#define PI 3.14
#define PI2 6.28
vec2 o(vec2 u,vec2 d){return u.x<d.x?u:d;}mat2 o(float u){float v=sin(u),f=cos(u);return mat2(f,v,-v,f);}vec3 opRe(vec3 u,float d){return u-d*round(u/d);}vec2 opRo(vec2 u,float d){return u*o(-d);}vec3 opTr(vec3 u,vec3 d){return u-d;}vec3 u(vec3 u,vec3 d){return u/d;}float n(float u,vec3 v){return u*min(v.x,min(v.y,v.z));}vec2 n(vec2 u){float v=PI/10.-atan(u.x,u.y),f=PI*2./10.;v=floor(v/f)*f;return opRo(u,-v);}float opSm(float u,float v,float d){float f=clamp(.5+.5*(v-u)/d,0.,1.);return mix(v,u,f)-d*f*(1.-f);}float dfSp(vec3 u,float d){return length(u)-d;}float dfRb(vec3 u,vec3 d,float v){vec3 f=abs(u)-d;return length(max(f,0.))+min(max(f.x,max(f.y,f.z)),0.)-v;}float dfBo(vec3 u,vec3 d){vec3 v=abs(u)-d;return length(max(v,0.))+min(max(v.x,max(v.y,v.z)),0.);}float dfTo(vec3 u,vec2 d){return length(vec2(length(u.xz)-d.x,u.y))-d.y;}float dfOc(vec3 u,float d){u=abs(u);return(u.x+u.y+u.z-d)*.577;}float n(vec3 u,float v,float d){vec2 f=vec2(length(u.xz)-2.*v+.05,abs(u.y)-d);return min(max(f.x,f.y),0.)+length(max(f,0.))-.05;}float opWi(vec3 v,vec3 f,float d,vec2 o){v=opTr(v,vec3(o.xy,0));v.xy=opRo(v.xy,d);v.yz=opRo(v.yz,PI*.5);v=u(v,f);float m=n(v,1.,.1);return n(m,f);}vec2 opBu(vec3 u,float d){u/=1.4;vec3 v=u;v.yz=opRo(v.yz,-PI*.5);vec2 o=vec2(10,.6);v.x=abs(v.x);v.xz=opRo(v.xz,PI*sin(sin(uTimelineTime*o.x+d)*cos(uTimelineTime*o.y+d))*.3);float f=opWi(v,vec3(.4,.3,.24)*.2,PI*-.3,vec2(.5,.4)*.2),z=opWi(v,vec3(.32,.3,.2)*.2,PI*.3,vec2(.4,-.4)*.2);return vec2(min(f,z),0);}vec2 opFl(vec3 v,float d){vec2 f=vec2(1e4,-1e4);v/=1.;v.y-=-.8;float r=.1;r=sin(uTimelineTime*1.4+.2+d)*.5;float m=-.1;m=cos(uTimelineTime*1.6+.1+d)*-.5;float z=v.y*sin(v.y*r),y=v.y*sin(v.y*m),s=sin(1.12*r)*.28,P=sin(1.12*m)*.28;mat2 x=o(-1.12*r),a=o(1.12*m);vec3 l=v;l=opTr(l,vec3(z,.28,y));float G=n(l,.015,.28);f=o(f,vec2(G,1));vec3 i=v;i=opTr(i,vec3(s,.56,P));i.yz=opRo(i.yz,PI*.5);i.xz*=x;i.yz*=a;i.xy=n(i.xy);i=opTr(i,vec3(0,.2,sin(i.y*5.)*.105));i.yz=opRo(i.yz,PI*.5);vec3 S=vec3(.08,.2,.2);i=u(i,S);float c=n(i,.4,.01);c=n(c,S);f=o(f,vec2(c,2));vec3 B=v;B=opTr(B,vec3(s,.59,P));float e=dfSp(B,.04);return o(f,vec2(e,3));}float opDb(float u,float v,float f,float d,float m,float o){return mix(mix(mix(v,f,smoothstep(0.,.25,u)),mix(f,d,smoothstep(.25,.5,u)),smoothstep(.25,.5,u)),mix(mix(d,m,smoothstep(.5,.75,u)),mix(m,o,smoothstep(.75,1.,u)),smoothstep(.5,.75,u)),smoothstep(.5,1.,u));}float opTb(float u,float v,float f,float d){return mix(mix(v,f,smoothstep(0.,.5,u)),mix(f,d,smoothstep(.5,1.,u)),smoothstep(.5,1.,u));}
#define BN 16
#define FS 1.
#define CS.35
#define MS.25
uniform vec3 uCP,uBPs[BN],uGPs[4];uniform float uGS;uniform vec4 uGSs[4];uniform float uOMR;uniform vec3 uORo;float u(vec3 u){return sin(u.x*4.+uTimelineTime*3.4)*.07+cos(u.y*3.+uTimelineTime*3.2)*.07+sin(u.z*3.5+uTimelineTime*3.)*.07;}float dfMC(vec3 u){return dfSp(u,FS);}float diMAt(vec3 u){return 1.-smoothstep(1.,1.8,length(u-uCP));}float dfMB(vec3 v,float f){for(int d=0;d<BN;d++){float m=dfSp(opTr(v,uBPs[d].xyz),CS);f=opSm(f,m,MS);}f+=u(v)*diMAt(v)*uGS;return f;}float dfMBs(vec3 u){float f=dfSp(opTr(u,uCP),FS*uGS);return dfMB(u,f);}vec2 opMo(vec2 u,vec2 v,float f){return mix(u,v,f);}vec2 o(vec3 u,float v,float f){vec3 d=mod(u*f,2.)-1.;f*=3.;vec3 m=abs(1.-3.*abs(d));float o=(min(max(m.x,m.y),min(max(m.y,m.z),max(m.z,m.x)))-1.)/f;return vec2(max(v,o),f);}float dfMe(vec3 v,float u){v/=u;v/=.5;float f=dfBo(v,vec3(1));vec2 m=vec2(f,1);m=o(v,m.x,m.y);m=o(v,m.x,m.y);m=o(v,m.x,m.y);return m.x*u;}vec3 opPrf(vec3 v,float u,float d){v=abs(v)-1.18;v=abs(v)-1.2;v.xz*=o(u+.1+uTimelineTime*.8+d);v.xy*=o(u+.8+sin(uTimelineTime)*.4+d);return v;}float dfPr(vec3 v,float u,float d){v/=d;vec3 f=v;f.xy*=o(uTimelineTime*.8+u);float m=dfTo(f,vec2(.8,.05));vec3 i=v;i.yz*=o(uTimelineTime*1.2+u);float z=dfTo(i,vec2(.8,.05)),s=dfOc(v,.6),e=opSm(opSm(m,z,.5),s,.5);return e*d;}
#pragma RAYMARCH_SCENE
vec3 v(vec3 u){vec3 v=vec3(dfScene(u+vec3(1e-4,0,0)).x-dfScene(u+vec3(-1e-4,0,0)).x,dfScene(u+vec3(0,1e-4,0)).x-dfScene(u+vec3(0,-1e-4,0)).x,dfScene(u+vec3(0,0,1e-4)).x-dfScene(u+vec3(0,0,-1e-4)).x);return normalize(v);}vec3 n(vec2 u,vec3 v,float f,float d){vec2 m=u*2.-1.;float o=tan(f*3.141592/180.*.5);vec3 z=v,s=normalize(cross(z,vec3(0,1,0)));return normalize(o*d*s*m.x+normalize(cross(s,z))*o*m.y+v);}float u(float u,float v,float d){return(u+v)/(v-d);}float v(float u,float v,float d){float f=v*u;return-f/(d*(u-1.)-f);}void v(float u,float d){if(u<d)discard;}uniform float uMetallic,uRoughness;uniform int uShadingModelId;
#pragma APPEND_UNIFORMS
uniform sampler2D uDepthTexture;uniform float uTargetWidth,uTargetHeight;
#ifdef USE_ALPHA_TEST
uniform float uAlphaTestThreshold;
#endif
in vec2 vUv;in vec3 vWorldPosition;
#define SHADING_MODEL_NUM 3.
struct GBufferA{vec3 baseColor;};struct GBufferB{vec3 normal;float shadingModelId;};struct GBufferC{float metallic;float roughness;};struct GBufferD{vec3 emissiveColor;};vec4 d(vec3 u,int v){float f=float(v)/SHADING_MODEL_NUM;return vec4(u*.5+.5,f);}layout(location=0) out vec4 outGBufferA;layout(location=1) out vec4 outGBufferB;layout(location=2) out vec4 outGBufferC;layout(location=3) out vec4 outGBufferD;void main(){vec4 f=vec4(0,0,0,1);vec3 m=vec3(0,0,1),o=uViewPosition,s=n(vUv,uViewDirection,uFov,uAspect);vec2 i=vec2(0);float r=uNearClip;vec3 z=o;for(int l=0;l<100;l++){z=o+s*r;i=dfScene(z);r+=i.x;if(r>uFarClip||i.x<=1e-4)break;}if(i.x>1e-4)discard;float l=texelFetch(uDepthTexture,ivec2(gl_FragCoord.xy),0).x,P=v(l,uNearClip,uFarClip),c=u((uViewMatrix*vec4(z,1)).z,uNearClip,uFarClip);if(c>=P)discard;vec4 a=uProjectionMatrix*uViewMatrix*vec4(z,1);gl_FragDepth=a.z/a.w*.5+.5;if(i.x>0.)m=v(z);
#ifdef USE_ALPHA_TEST
v(f.w,uAlphaTestThreshold);
#endif
f.xyz=pow(f.xyz,vec3(2.2));outGBufferA=vec4(f.xyz,1);outGBufferB=d(m,uShadingModelId);outGBufferC=vec4(uMetallic,uRoughness,0,1);outGBufferD=vec4(vec4(1).xyz,1);}`;